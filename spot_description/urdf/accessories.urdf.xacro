<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:if value="$(optenv SPOT_PACK 0)">
    <joint name="pack_mount_joint" type="fixed">
      <parent link="base_link" />
      <child link="pack_mount" />
      <origin xyz="-0.019986 0 0.093662" rpy="0 0 0" />
    </joint>

    <link name="pack_mount">
      <visual>
        <geometry>
          <mesh filename="package://spot_description/meshes/base/visual/pack_top.obj" />
        </geometry>
      </visual>
      <visual>
        <geometry>
          <mesh filename="package://spot_description/meshes/base/visual/pack_body.obj" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://spot_description/meshes/base/visual/pack_body.obj" />
        </geometry>
      </collision>
    </link>
  </xacro:if>

  <xacro:if value="$(optenv SPOT_LIDAR_MOUNT 0)">
    <joint name="lidar_mount_joint" type="fixed">
      <parent link="pack_mount" />
      <child link="lidar_mount" />
      <origin xyz="0.015 0 0.149285" rpy="0 0 0" />
    </joint>

    <link name="lidar_mount">
      <visual>
        <geometry>
          <mesh filename="package://spot_description/meshes/base/visual/lidar_mount.obj" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh
            filename="package://spot_description/meshes/base/collision/lidar_mount_collision.stl" />
        </geometry>
      </collision>
    </link>

    <xacro:if value="$(optenv SPOT_VELODYNE 0)">
      <!-- Use the Velodyne macro for the actual sensor -->
      <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro" />
      <xacro:VLP-16 parent="lidar_mount">
        <origin xyz="$(optenv SPOT_VELODYNE_XYZ 0 0 0)" rpy="$(optenv SPOT_VELODYNE_RPY 0 0 0)" />
      </xacro:VLP-16>

      <!-- Add the protective cage -->
      <link name="velodyne_cage">
        <visual>
          <geometry>
            <mesh filename="package://spot_description/meshes/base/collision/velodyne_cage.stl"
              scale="0.001 0.001 0.001" />
          </geometry>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <material name="black" />
        </visual>
        <collision>
          <geometry>
            <mesh filename="package://spot_description/meshes/base/collision/velodyne_cage.stl"
              scale="0.001 0.001 0.001" />
          </geometry>
          <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
      </link>
      <joint name="velodyne_cage_joint" type="fixed">
        <parent link="lidar_mount" />
        <child link="velodyne_cage" />
        <origin xyz="$(optenv SPOT_VELODYNE_XYZ 0 0 0)" rpy="$(optenv SPOT_VELODYNE_RPY 0 0 0)" />
      </joint>
    </xacro:if>
  </xacro:if>

  <xacro:if value="${gazebo}">

    <xacro:include filename="$(find spot_description)/urdf/constants.urdf.xacro" />
    <xacro:include filename="$(find hector_sensors_description)/urdf/hokuyo_utm30lx.urdf.xacro" />
    <xacro:include filename="$(find hector_sensors_description)/urdf/asus_camera.urdf.xacro" />

    <xacro:hokuyo_utm30lx name="hokuyo" parent="base_link" ros_topic="scan" update_rate="30"
      ray_count="1040" min_angle="130" max_angle="-130">
      <origin xyz="0.0 0.0 ${base_height / 2 + 0.04}" rpy="0 0 0" />
    </xacro:hokuyo_utm30lx>

    <gazebo reference="hokuyo_frame">
      <material>Gazebo/FlatBlack</material>
    </gazebo>

    <xacro:asus_camera parent="base_link" name="camera">
      <origin xyz="${base_length / 2 - 0.05} 0.0 -${base_height / 2 + 0.01}" rpy="0 0 0" />
    </xacro:asus_camera>

    <gazebo>
      <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <updateRate>50.0</updateRate>
        <bodyName>imu_link</bodyName>
        <topicName>imu/data</topicName>
        <accelDrift>0.005 0.005 0.005</accelDrift>
        <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
        <rateDrift>0.005 0.005 0.005 </rateDrift>
        <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
        <headingDrift>0.005</headingDrift>
        <headingGaussianNoise>0.005</headingGaussianNoise>
      </plugin>
    </gazebo>

    <link name="imu_link">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="1e-09" ixy="0.0" ixz="0.0" iyy="1e-09" iyz="0.0" izz="1e-09" />
      </inertial>
    </link>
    <joint name="imu_joint" type="fixed">
      <parent link="base_link" />
      <child link="imu_link" />
    </joint>

  </xacro:if>

</robot>