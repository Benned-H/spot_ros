<!-- Launch the Spot driver and auxiliary nodes to control/visualize Spot -->
<launch>

  <!-- Required argument: Path to the YAML containing Spot's login information -->
  <!--   Provides the username, password, and IP used to connect to Spot -->
  <arg name="spot_secrets_yaml" />

  <!-- Duration (seconds) after which the SDK will E-stop if there's no communication -->
  <arg name="estop_timeout" default="9.0" />
  <arg name="autonomy_enabled" default="true" />

  <!-- Velocity limits in m/s -->
  <arg name="max_linear_velocity_x_mps" default="0.5" />
  <arg name="max_linear_velocity_y_mps" default="0.5" />
  <arg name="max_angular_velocity_z_mps" default="0.5" />

  <!-- Is Spot allowed to move? Default: Yes -->
  <arg name="allow_motion" default="true" />

  <!-- Configuration file for the Spot driver. Allows us to change the publication rate
    of data from Spot, auto-claim the lease, auto-power on, and auto-stand -->
  <arg name="driver_config" default="$(find spot_driver)/config/spot_ros.yaml" />

  <!-- Should we launch nodes to enable joystick control of Spot? Default: No -->
  <arg name="joystick_control" default="false" />

  <!-- Should we load Spot's URDF description? Default: Yes, unless told otherwise -->
  <arg name="load_robot_description" default="true" />

  <!-- Load Spot's robot description as a ROS parameter and launch the robot state publisher -->
  <include file="$(find spot_description)/launch/description.launch" if="$(arg load_robot_description)"/>

  <!-- Launch nodes to enable joystick control of Spot through ROS -->
  <include file="$(find spot_driver)/launch/control.launch" if="$(arg joystick_control)" />

  <!-- If the right arguments are set, launch nodes to support the Velodyne LIDAR -->
  <include file="$(find spot_driver)/launch/accessories.launch" />

  <!-- See the source code: -->
  <node pkg="spot_driver" type="spot_ros" name="spot_ros" ns="spot" output="screen">
    <rosparam file="$(arg driver_config)" command="load" />
    <rosparam file="$(arg spot_secrets_yaml)" command="load" />

    <param name="estop_timeout" value="$(arg estop_timeout)" />
    <param name="autonomy_enabled" value="$(arg autonomy_enabled)" />
    <param name="estop_timeout" value="$(arg estop_timeout)" />
    <param name="max_linear_velocity_x" value="$(arg max_linear_velocity_x_mps)" />
    <param name="max_linear_velocity_y" value="$(arg max_linear_velocity_y_mps)" />
    <param name="max_angular_velocity_z" value="$(arg max_angular_velocity_z_mps)" />
    <param name="allow_motion" value="$(arg allow_motion)" />
    <remap from="joint_states" to="/spot/joint_states" />
    <remap from="tf" to="/tf" />
  </node>

  <!-- Launch a multiplexer to prioritize the various sources of command velocity messages -->
  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find spot_driver)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="spot/cmd_vel" />
  </node>

</launch>